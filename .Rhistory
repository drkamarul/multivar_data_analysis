.tbl_fun =
~.x %>%
tbl_summary(
by = year,
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing = "no",
digits = all_continuous() ~ 1
)) %>%
as_gt()
gapminder %>%
select(continent, year, lifeExp, pop, gdpPercap) %>%
filter(continent == "Asia") %>%
filter(year == 1962 | year == 1982 | year == 2002) %>%
mutate(pop = pop/1000000, gdpPercap = gdpPercap/1000) %>%
tbl_strata(
strata = continent,
.tbl_fun =
~.x %>%
tbl_summary(
by = year,
label = list(lifeExp ~ "Life Exp", pop ~ "Pop size", gdpPercap ~ "Percap GDP"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing = "no",
digits = all_continuous() ~ 1
)) %>%
as_gt()
gapminder %>%
select(continent, year, lifeExp, pop, gdpPercap) %>%
filter(continent == "Asia") %>%
filter(year == 1962 | year == 1982 | year == 2002) %>%
mutate(pop = pop/1000000, gdpPercap = gdpPercap/1000) %>%
tbl_strata(
strata = continent,
.tbl_fun =
~.x %>%
tbl_summary(
by = year,
label = list(lifeExp ~ "Life Exp", pop ~ "Pop size", gdpPercap ~ "Percap GDP"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing = "no",
digits = all_continuous() ~ 1
)) %>%
modify_footnote(estimate ~ "Mean(SD), Pop size in million and GDP in thousand") %>%
as_gt()
gapminder %>%
select(continent, year, lifeExp, pop, gdpPercap) %>%
filter(continent == "Asia") %>%
filter(year == 1962 | year == 1982 | year == 2002) %>%
mutate(pop = pop/1000000, gdpPercap = gdpPercap/1000) %>%
tbl_strata(
strata = continent,
.tbl_fun =
~.x %>%
tbl_summary(
by = year,
label = list(lifeExp ~ "Life Exp", pop ~ "Pop size", gdpPercap ~ "Percap GDP"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing = "no",
digits = all_continuous() ~ 1
)) %>%
modify_footnote(all_stat_cols() ~ "Mean(SD), Pop size in million and GDP in thousand") %>%
as_gt()
gapminder %>%
select(continent, year, lifeExp, pop, gdpPercap) %>%
filter(continent == "Asia") %>%
filter(year == 1962 | year == 1982 | year == 2002)
gapminder %>%
select(continent, country, year, lifeExp, pop, gdpPercap) %>%
filter(continent == "Asia") %>%
filter(year == 1962 | year == 1982 | year == 2002) %>%
mutate(pop = pop/1000000, gdpPercap = gdpPercap/1000) %>%
tbl_strata(
strata = continent,
.tbl_fun =
~.x %>%
tbl_summary(
by = year,
label = list(lifeExp ~ "Life Exp", pop ~ "Pop size", gdpPercap ~ "Percap GDP"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing = "no",
digits = all_continuous() ~ 1
)) %>%
modify_footnote(all_stat_cols() ~ "Mean(SD), Pop size in million and GDP in thousand") %>%
as_gt()
gapminder %>%
select(continent, country, year, lifeExp, pop, gdpPercap) %>%
filter(continent == "Asia") %>%
filter(year == 1962 | year == 1982 | year == 2002)
rrr_mlog <- exp(b_ci_mlog)
library(here)
library(tidyverse)
library(haven)
library(gtsummary)
library(VGAM)
library(kableExtra)
ms <- read_dta(here('data','metabolic_syndrome.dta'))
glimpse(ms)
ms <- ms %>%
select(fbs, totchol, hpt , weight) %>%
mutate(across(where(is.labelled), as_factor))
glimpse(ms)
ms <- ms %>%
mutate(cat_fbs = cut(fbs,
breaks = c(2.50 , 6.10 , 6.90 , 28.01 ),
labels = c("Normal","IFG", "DM")))
ms %>%
count(cat_fbs)
ms <- ms %>%
filter(!is.na(cat_fbs))
ms %>%
count(cat_fbs)
ms %>%
tbl_summary(by = cat_fbs,
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
type = list(where(is.logical) ~ "categorical"),
label = list(fbs ~ "Fasting Blood Sugar (mmol/L)",
totchol ~ "Total Cholesterol (mmol/L)", hpt~"Hypertension", weight ~ "Weight (kg)"),
missing_text = "Missing") %>%
modify_caption("**Table 1. Survey Participant Characteristic**")  %>%
modify_header(label ~ "**Variable**") %>%
modify_spanning_header(c("stat_1", "stat_2", "stat_3") ~ "**Glycemic Control Status**") %>%
modify_footnote(all_stat_cols() ~ "Mean (SD) or Frequency (%)") %>%
bold_labels() %>%
as_gt()
levels(ms$cat_fbs)
ms <- ms %>%
mutate(cat_fbs = fct_relevel(cat_fbs,
c("DM", 'IFG', 'Normal')))
levels(ms$cat_fbs)
log_chol <- vglm(cat_fbs ~ totchol,
multinomial, data = ms)
summary(log_chol)
log_hpt <- vglm(cat_fbs ~ hpt,
multinomial, data = ms)
summary(log_hpt)
log_wt <- vglm(cat_fbs ~ weight,
multinomial, data = ms)
summary(log_wt)
mlog <- vglm(cat_fbs ~ totchol + hpt + weight,
multinomial, data = ms)
summary(mlog)
mlogi <- vglm(cat_fbs ~ totchol + hpt + weight + totchol*weight,
multinomial, data = ms)
summary(mlogi)
b_mlog <- coef(mlog)
ci_mlog <- confint(mlog)
b_ci_mlog <- cbind(b_mlog,ci_mlog)
b_ci_mlog %>%
kbl()
rrr_mlog <- exp(b_ci_mlog)
tab_mlog <- cbind(b_ci_mlog, rrr_mlog)
colnames(tab_mlog) <- c('b', 'lower b', 'upper b',
'rrr', 'lower rrr', 'upper rrr')
tab_mlog %>%
kbl(., digits = 1) %>%
kable_styling(position = "center")
tab_mlog %>%
kbl() %>%
kable_styling(position = "center")
predict.vgam(mlog, type = 'response') %>%
head(10)
tab_mlog %>%
kbl(., digits = 3) %>%
kable_styling(bootstrap_options =
c("striped", "hover", "condensed", "responsive"))
tab_mlog %>%
kbl(digits = 2) %>%
kable_styling(position = "center")
b_mlog <- coef(mlog)
ci_mlog <- confint(mlog)
b_ci_mlog <- cbind(b_mlog,ci_mlog)
b_ci_mlog %>%
kbl(digits = 2, booktabs = T, caption = "Estimates from multinomial logistic regression (billion EUR, \\% )") %>%
kable_styling(position = "center")
b_mlog <- coef(mlog)
ci_mlog <- confint(mlog)
b_ci_mlog <- cbind(b_mlog,ci_mlog)
b_ci_mlog %>%
kbl(digits = 2, booktabs = T, caption = "Estimates from multinomial logistic regression") %>%
kable_styling(position = "center")
b_ci_mlog <- data.frame(b_mlog,ci_mlog)
b_ci_mlog <- data.frame(b_mlog,ci_mlog)
b_ci_mlog
ci_mlog
b_mlog
b_ci_mlog
b_mlog <- coef(mlog) %>% data.frame()
b_mlog
ci_mlog <- confint(mlog) %>% data.frame()
b_ci_mlog <- left_join(b_mlog,ci_mlog)
b_ci_mlog <- join(b_mlog,ci_mlog)
b_mlog
b_mlog <- coef(mlog) %>% tidy()
library(broom)
b_mlog <- coef(mlog) %>% tidy()
b_mlog <- coef(mlog) %>% data.frame()
ci_mlog <- confint(mlog) %>% data.frame()
b_ci_mlog <- cbind(b_mlog,ci_mlog)
b_mlog <- coef(mlog) %>% data.frame()
ci_mlog <- confint(mlog) %>% data.frame()
b_ci_mlog <- left.join(b_mlog,ci_mlog)
ci_mlog
b_mlog <- coef(mlog)
ci_mlog <- confint(mlog)
b_ci_mlog <- datra.frame(b_mlog,ci_mlog)
b_ci_mlog <- data.frame(b_mlog,ci_mlog)
b_ci_mlog
b_ci_mlog %>%
kbl(digits = 2, booktabs = T, caption = "Estimates from multinomial logistic regression") %>%
kable_styling(position = "center")
glimpse(b_ci_mlog)
b_ci_mlog <- data.frame(b_mlog,ci_mlog) %>%
rename(RRR = b_mlog, Lower CI = X2.5.. )
b_ci_mlog <- data.frame(b_mlog,ci_mlog) %>%
rename(RRR = b_mlog, "Lower CI" = X2.5.. )
b_ci_mlog
b_ci_mlog <- data.frame(b_mlog,ci_mlog) %>%
rename(RRR = b_mlog, "Lower CI" = X2.5.., "Upper CI" = X95.5)
b_ci_mlog <- data.frame(b_mlog,ci_mlog) %>%
rename(RRR = b_mlog, "Lower CI" = X2.5.., "Upper CI" = X95.5..)
b_ci_mlog <- data.frame(b_mlog,ci_mlog) %>%
rename(RRR = b_mlog, "Lower CI" = X2.5.., "Upper CI" = X97.5)
glimpse(b_ci_mlog)
b_ci_mlog <- data.frame(b_mlog,ci_mlog) %>%
rename(RRR = b_mlog, "Lower CI" = X2.5.., "Upper CI" = X97.5..)
b_mlog <- coef(mlog)
ci_mlog <- confint(mlog)
b_ci_mlog <- data.frame(b_mlog,ci_mlog) %>%
rename(RRR = b_mlog, "Lower CI" = X2.5.., "Upper CI" = X97.5..)
b_ci_mlog %>%
kbl(digits = 2, booktabs = T, caption = "Estimates from multinomial logistic regression") %>%
kable_styling(position = "center")
rrr_mlog <- exp(b_ci_mlog)
tab_mlog <- cbind(b_ci_mlog, rrr_mlog)
colnames(tab_mlog) <- c('b', 'lower b', 'upper b',
'RRR', 'lower RRR', 'upper RRR')
tab_mlog %>%
kbl(digits = 2, booktabs = T, caption = "Log odds and RRR from multinomial logistic regression") %>%
kable_styling(position = "center")
tab_mlog
tab_mlog %>%
write_csv("results_multinomial.csv")
library(tidyverse)
library(here)
library(gapminder)
gapminder <- gapminder
gapminder %>%
slice(1:4)
glimpse(gapminder)
summary(gapminder)
ggplot(data = gapminder) +
geom_point(mapping = aes(x = year, y = lifeExp))
ggplot(data = gapminder) +
geom_point(mapping = aes(x = year,
y = lifeExp,
colour = continent))
ggplot(data = gapminder) +
geom_point(mapping = aes(x = year,
y = lifeExp,
size = gdpPercap))
ggplot(data = gapminder) +
geom_point(mapping = aes(x = year,
y = lifeExp,
shape = continent))
ggplot(data = gapminder) +
geom_point(mapping = aes(x = year, y = lifeExp),
colour = 'blue')
ggplot(data = gapminder) +
geom_point(mapping = aes(x = year, y = lifeExp),
shape = 3)
ggplot(data = gapminder) +
geom_point(mapping = aes(x = year, y = lifeExp)) +
facet_wrap(~ continent, nrow = 3)
ggplot(data = gapminder) +
geom_point(mapping = aes(x = year, y = lifeExp)) +
facet_wrap(~ continent, nrow = 2)
ggplot(data = gapminder) +
geom_point(mapping = aes(x = gdpPercap, y = lifeExp))
ggplot(data = gapminder) +
geom_smooth(mapping = aes(x = gdpPercap, y = lifeExp))
ggplot(data = gapminder) +
geom_smooth(mapping = aes(x = log(gdpPercap),
y = lifeExp,
linetype = continent))
ggplot(data = gapminder) +
geom_smooth(mapping = aes(x = log(gdpPercap),
y = lifeExp,
colour = continent))
ggplot(data = gapminder) +
geom_point(mapping = aes(x = log(gdpPercap), y = lifeExp)) +
geom_smooth(mapping = aes(x = log(gdpPercap), y = lifeExp))
ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap), y = lifeExp)) +
geom_point() +
geom_smooth()
ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap), y = lifeExp)) +
geom_point(mapping = aes(colour = continent)) +
geom_smooth()
ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap), y = lifeExp)) +
geom_point() +
geom_smooth(mapping = aes(colour = continent))
ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap), y = lifeExp)) +
geom_point(mapping = aes(shape = continent)) +
geom_smooth(mapping = aes(colour = continent))
ggplot(data = gapminder) +
geom_bar(mapping = aes(x = continent))
ggplot(data = gapminder) +
geom_bar(mapping = aes(x = continent, y = ..prop..,
group = 1))
mypop <- ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap),
y = lifeExp)) +
geom_point() +
geom_smooth(mapping = aes(colour = continent))
mypop
mypop +
ggtitle("GDP (in log) and life expectancy")
mypop + ggtitle("GDP (in log) and life expectancy:
\nData from Gapminder")
mypop +
scale_x_continuous(breaks = seq(0,12,1))
mypop +
ggtitle("GDP (in log) and life expectancy:
\nData from Gapminder") +
ylab("Life Expentancy") +
xlab("Percapita GDP in log")
mypop +
theme_bw()
mypop +
theme_classic()
myplot <-
mypop +
ggtitle("GDP (in log) and life expectancy:
\nData from Gapminder") +
ylab("Life Expentancy") +
xlab("Percapita GDP in log") +
scale_x_continuous(breaks = seq(0,12,1)) +
theme_classic()
myplot
ggsave(plot = myplot,
here("plots","my_pdf_plot.pdf"))
ggsave(plot = myplot,
here("plots","my_png_plot.png"))
ggsave(plot = myplot,
here("plots","my_jpg_plot.jpg"))
ggsave(plot = myplot,
here('plots','my_pdf_plot2.pdf'),
width = 10, height = 6, units = "in",
dpi = 150, device = 'pdf')
ggsave(plot = myplot,
here('plots','my_png_plot2.png'),
width = 10, height = 6, units = "cm",
dpi = 150, device = 'png')
ggsave(plot = myplot,
here("plots","my_jpg_plot2.jpg"),
width = 10, height = 6, units = "cm",
dpi = 150, device = 'jpg')
ggplot(data = gapminder) +
geom_bar(mapping = aes(x = continent, y = after_stat(count/sum(count)),
group = 1))
ggplot(data = gapminder) +
geom_bar(mapping = aes(x = continent, y = ..prop..,
group = 1))
ggplot(data = gapminder) +
geom_bar(mapping = aes(x = continent, y = after_stat(count/sum(count)),
group = 1))
ggplot(data = gapminder) +
geom_bar(mapping = aes(x = continent, y = after_stat(count/sum(count)),
group = 1))
gapminder <-
gapminder %>%
count(continent) %>%
mutate(perc = n/sum(n) * 100)
pl <- ggplot (data = gapminder, aes(x = continent, y = n, fill = continent))
pl <- pl + geom_col()
pl <- pl + geom_text(aes(x = continent, y = n
, label = paste0(n, " (", round(perc,1),"%)")
, vjust = -0.5
))
pl <- pl + theme_classic()
pl <- pl + labs(title ="Bar chart showing count and percentage")
pl
mypop <- ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap),
y = lifeExp)) +
geom_point() +
geom_smooth(mapping = aes(colour = continent))
mypop
gapminder
gapminder2 <-
gapminder %>%
count(continent) %>%
mutate(perc = n/sum(n) * 100)
pl <- gapminder2 %>%
ggplot(aes(x = continent, y = n, fill = continent))
pl <- pl + geom_col()
pl <- pl + geom_text(aes(x = continent, y = n
, label = paste0(n, " (", round(perc,1),"%)")
, vjust = -0.5
))
pl <- pl + theme_classic()
pl <- pl + labs(title ="Bar chart showing count and percentage")
pl
gapminder2 <-
gapminder %>%
count(continent) %>%
mutate(perc = n/sum(n) * 100)
pl <- gapminder2 %>%
ggplot(aes(x = continent, y = n, fill = continent))
pl <- pl + geom_col()
pl <- pl + geom_text(aes(x = continent, y = n
, label = paste0(n, " (", round(perc,1),"%)")
, vjust = -0.5
))
pl <- pl + theme_classic()
pl <- pl + labs(title ="Bar chart showing count and percentage")
pl
gapminder <-
gapminder %>%
count(continent) %>%
mutate(perc = n/sum(n) * 100)
pl <- gapminder2 %>%
ggplot(aes(x = continent, y = n, fill = continent))
pl <- pl + geom_col()
pl <- pl + geom_text(aes(x = continent, y = n
, label = paste0(n, " (", round(perc,1),"%)")
, vjust = -0.5
))
pl <- pl + theme_classic()
pl <- pl + labs(title ="Bar chart showing count and percentage")
pl
gapminder <-
gapminder %>%
count(continent) %>%
mutate(perc = n/sum(n) * 100)
pl <- gapminder %>%
ggplot(aes(x = continent, y = n, fill = continent))
pl <- pl + geom_col()
pl <- pl + geom_text(aes(x = continent, y = n
, label = paste0(n, " (", round(perc,1),"%)")
, vjust = -0.5
))
pl <- pl + theme_classic()
pl <- pl + labs(title ="Bar chart showing count and percentage")
pl
View(gapminder)
View(gapminder)
gapminder::gapminder
gapminder <-
gapminder %>%
count(continent) %>%
mutate(perc = n/sum(n) * 100)
pl <- gapminder %>%
ggplot(aes(x = continent, y = n, fill = continent))
pl <- pl + geom_col()
pl <- pl + geom_text(aes(x = continent, y = n
, label = paste0(n, " (", round(perc,1),"%)")
, vjust = -0.5
))
pl <- pl + theme_classic()
pl <- pl + labs(title ="Bar chart showing count and percentage")
pl
gapminder <-
gapminder %>%
count(continent) %>%
mutate(perc = n/sum(n) * 100)
pl <- gapminder %>%
ggplot(aes(x = continent, y = n, fill = continent))
pl <- pl + geom_col()
pl <- pl + geom_text(aes(x = continent, y = n
, label = paste0(n, " (", round(perc,1),"%)")
, vjust = -0.5
))
pl <- pl + theme_classic()
pl <- pl + labs(title ="Bar chart showing count and percentage")
pl
gapminder2 <-
gapminder %>%
count(continent) %>%
mutate(perc = n/sum(n) * 100)
pl <- gapminder2 %>%
ggplot(aes(x = continent, y = n, fill = continent))
pl <- pl + geom_col()
pl <- pl + geom_text(aes(x = continent, y = n
, label = paste0(n, " (", round(perc,1),"%)")
, vjust = -0.5
))
pl <- pl + theme_classic()
pl <- pl + labs(title ="Bar chart showing count and percentage")
pl
mypop <- ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap),
y = lifeExp)) +
geom_point() +
geom_smooth(mapping = aes(colour = continent))
mypop
mypop +
theme_bw()
mypop +
theme_classic()
version
bookdown::render_book(new_session = TRUE)
bookdown::publish_book(account = 'drki_musa')
